{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "(v5.0) AWS CFT to deploy a dual AZ spoke VPC for a dual AZ A-P solution, repo: https://github.com/FortinetCloudCSE/fortigate-aws-ha-dualaz-cloudformation",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [
				{
					"Label": {
						"default": "VPC Configuration"
					},
					"Parameters": [
						"VPCCIDR",
						"AZForSubnet1",
						"AZForSubnet2",
						"PublicSubnet1CIDR",
						"PrivateSubnet1CIDR",
						"PublicSubnet2CIDR",
						"PrivateSubnet2CIDR"
					]
				},
				{
					"Label": {
						"default": "TGW Configuration"
					},
					"Parameters": [
						"TransitGateway",
						"TransitGatewaySecurityRtb",
						"TransitGatewaySpokeRtb"
					]
				},
				{
					"Label": {
						"default": "CWAN Configuration"
					},
					"Parameters": [
						"CloudWan",
						"CloudWanSegmentKey",
						"CloudWanSegmentValue"
					]
				}
			]
		}
	},
	"Parameters": {
		"VPCCIDR": {
			"Type": "String",
			"Default": "10.1.0.0/16",
			"Description": "Provide a network CIDR for the VPC",
			"AllowedPattern": "(\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2}",
			"ConstraintDescription": "Must be a valid CIDR block format."
		},
		"AZForSubnet1": {
			"Type": "AWS::EC2::AvailabilityZone::Name",
			"Description": "Select an Availability Zone for the first set of subnets"
		},
		"AZForSubnet2": {
			"Type": "AWS::EC2::AvailabilityZone::Name",
			"Description": "Select an Availability Zone for the second set of subnets"
		},
		"PublicSubnet1CIDR": {
			"Type": "String",
			"Default": "10.1.1.0/24",
			"Description": "Provide a network CIDR for PublicSubnet1",
			"AllowedPattern": "(\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2}",
			"ConstraintDescription": "Must be a valid CIDR block format."
		},
		"PrivateSubnet1CIDR": {
			"Type": "String",
			"Default": "10.1.2.0/24",
			"Description": "Provide a network CIDR for PrivateSubnet1",
			"AllowedPattern": "(\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2}",
			"ConstraintDescription": "Must be a valid CIDR block format."
		},
		"PublicSubnet2CIDR": {
			"Type": "String",
			"Default": "10.1.10.0/24",
			"Description": "Provide a network CIDR for PublicSubnet2",
			"AllowedPattern": "(\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2}",
			"ConstraintDescription": "Must be a valid CIDR block format."
		},
		"PrivateSubnet2CIDR": {
			"Type": "String",
			"Default": "10.1.20.0/24",
			"Description": "Provide a network CIDR for PrivateSubnet2",
			"AllowedPattern": "(\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2}",
			"ConstraintDescription": "Must be a valid CIDR block format."
		},
		"TransitGateway": {
			"Type": "String",
			"Description": "Provide the Transit GW ID to attach to"
		},
		"TransitGatewaySecurityRtb": {
			"Type": "String",
			"Description": "[Leave blank if an existing Tgw will not be used] Provide the Transit GW RouteTable ID that the security VPC is associated to"
		},
		"TransitGatewaySpokeRtb": {
			"Type": "String",
			"Description": "[Leave blank if an existing Tgw will not be used] Provide the Transit GW RouteTable ID that your spoke VPCs will be associated to"
		},
		"CloudWan": {
			"Type": "String",
			"Description": "[Leave blank if an existing Cwan will not be used] Provide the Cloud WAN Core Network ID to attach to"
		},
		"CloudWanSegmentKey": {
			"Type": "String",
			"Description": "[Leave blank if an existing Cwan will not be used] Provide the name that should be used to create a Tag on the Cwan VPC Attachment to allow CWAN attachment automation"
		},
		"CloudWanSegmentValue": {
			"Type": "String",
			"Description": "[Leave blank if an existing Cwan will not be used] Provide the value that should be used to create a Tag on the Cwan VPC Attachment to allow CWAN attachment automation"
		}
	},
	"Conditions": {
		"TransitGateway": {
			"Fn::And": [
				{
					"Fn::Not": [
						{
							"Fn::Equals": [
								{
									"Ref": "TransitGateway"
								},
								""
							]
						}
					]
				},
				{
					"Fn::Not": [
						{
							"Fn::Equals": [
								{
									"Ref": "TransitGatewaySecurityRtb"
								},
								""
							]
						}
					]
				},
				{
					"Fn::Not": [
						{
							"Fn::Equals": [
								{
									"Ref": "TransitGatewaySpokeRtb"
								},
								""
							]
						}
					]
				},
				{
					"Fn::Equals": [
						{
							"Ref": "CloudWan"
						},
						""
					]
				}
			]
		},
		"CloudWan": {
			"Fn::And": [
				{
					"Fn::Not": [
						{
							"Fn::Equals": [
								{
									"Ref": "CloudWan"
								},
								""
							]
						}
					]
				},
				{
					"Fn::Not": [
						{
							"Fn::Equals": [
								{
									"Ref": "CloudWanSegmentKey"
								},
								""
							]
						}
					]
				},
				{
					"Fn::Not": [
						{
							"Fn::Equals": [
								{
									"Ref": "CloudWanSegmentValue"
								},
								""
							]
						}
					]
				},
				{
					"Fn::Equals": [
						{
							"Ref": "TransitGateway"
						},
						""
					]
				}
			]
		}
	},
	"Resources": {
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-VPC"
						}
					}
				]
			}
		},
		"PublicSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet1CIDR"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-PublicSubnet1"
						}
					}
				]
			}
		},
		"PrivateSubnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PrivateSubnet1CIDR"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet1"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"-",
								[
									{
										"Ref": "AWS::StackName"
									},
									"PrivateSubnet1"
								]
							]
						}
					}
				]
			}
		},
		"PublicSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet2CIDR"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-PublicSubnet2"
						}
					}
				]
			}
		},
		"PrivateSubnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PrivateSubnet2CIDR"
				},
				"AvailabilityZone": {
					"Ref": "AZForSubnet2"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-PrivateSubnet2"
						}
					}
				]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-IGW"
						}
					}
				]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"PublicRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-PublicRouteTable"
						}
					}
				]
			}
		},
		"PrivateRouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-PrivateRouteTable"
						}
					}
				]
			}
		},
		"VPCRoute1": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"VPCRoute2": {
			"Type": "AWS::EC2::Route",
			"Condition": "TransitGateway",
			"DependsOn": [
				"TransitGatewaySpokeVpcAttachment",
				"TransitGatewaySpokeVpcAttachmentAssociation"
			],
			"Properties": {
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"TransitGatewayId": {
					"Ref": "TransitGateway"
				}
			}
		},
		"VPCRoute3": {
			"Type": "AWS::EC2::Route",
			"Condition": "CloudWan",
			"DependsOn": "CloudWanVpcAttachment",
			"Properties": {
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"CoreNetworkArn": {
					"Fn::Join": [
						"",
						[
							"arn:aws:networkmanager::",
							{
								"Ref": "AWS::AccountId"
							},
							":core-network/",
							{
								"Ref": "CloudWan"
							}
						]
					]
				}
			}
		},
		"SubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet1"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PublicSubnet2"
				},
				"RouteTableId": {
					"Ref": "PublicRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation3": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PrivateSubnet1"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation4": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "PrivateSubnet2"
				},
				"RouteTableId": {
					"Ref": "PrivateRouteTable"
				}
			}
		},
		"TransitGatewaySpokeVpcAttachment": {
			"Type": "AWS::EC2::TransitGatewayAttachment",
			"Condition": "TransitGateway",
			"Properties": {
				"SubnetIds": [
					{
						"Ref": "PrivateSubnet1"
					},
					{
						"Ref": "PrivateSubnet2"
					}
				],
				"TransitGatewayId": {
					"Ref": "TransitGateway"
				},
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-vpc-attachment"
						}
					}
				]
			}
		},
		"TransitGatewaySpokeVpcAttachmentAssociation": {
			"Type": "AWS::EC2::TransitGatewayRouteTableAssociation",
			"DependsOn": "PrivateSubnet2",
			"Condition": "TransitGateway",
			"Properties": {
				"TransitGatewayAttachmentId": {
					"Ref": "TransitGatewaySpokeVpcAttachment"
				},
				"TransitGatewayRouteTableId": {
					"Ref": "TransitGatewaySpokeRtb"
				}
			}
		},
		"TransitGatewaySpokeVpcRouteTablePropagation": {
			"Type": "AWS::EC2::TransitGatewayRouteTablePropagation",
			"DependsOn": "TransitGatewaySpokeVpcAttachment",
			"Condition": "TransitGateway",
			"Properties": {
				"TransitGatewayAttachmentId": {
					"Ref": "TransitGatewaySpokeVpcAttachment"
				},
				"TransitGatewayRouteTableId": {
					"Ref": "TransitGatewaySecurityRtb"
				}
			}
		},
		"CloudWanVpcAttachment": {
			"Type": "AWS::NetworkManager::VpcAttachment",
			"Condition": "CloudWan",
			"Properties": {
				"CoreNetworkId": {
					"Ref": "CloudWan"
				},
				"Options": {
					"ApplianceModeSupport": "true"
				},
				"SubnetArns": [
					{
						"Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet1}"
					},
					{
						"Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/${PrivateSubnet2}"
					}
				],
				"VpcArn": {
					"Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/${VPC}"
				},
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Sub": "${AWS::StackName}-vpc-attacment"
						}
					},
					{
						"Key": {
							"Ref": "CloudWanSegmentKey"
						},
						"Value": {
							"Ref": "CloudWanSegmentValue"
						}
					}
				]
			}
		}
	},
	"Outputs": {
	}
}